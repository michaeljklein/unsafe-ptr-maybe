-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/michaeljklein/unsafe-ptr-maybe#readme</a>
@package unsafe-ptr-maybe
@version 0.1.0.0


-- | Use <tt>reallyUnsafePtrEquality</tt> to implement <a>Maybe</a>.
--   
--   Currently, this is pretty broken:
--   
--   <pre>
--   Î»&gt; putStrLn$unlines[show(fromUMaybe<a>$</a>[unothing,pure()]),show(toUMaybe<a>$</a>[Nothing,Just()])]
--   [Just (),Just ()]
--   [UJust (),UJust ()]
--   </pre>
--   
--   But the tests pass, so it works sometimes. I suspect it's due to the
--   differences between compiled and interpreted code.
module Data.Maybe.Unsafe

-- | <a>Maybe</a> implemented using <tt>reallyUnsafePtrEquality</tt>
newtype UMaybe a
UMaybe :: a -> UMaybe a
[unsafeGetUMaybe] :: UMaybe a -> a

-- | <pre>
--   <tt>unsafeCoerce</tt> ()
--   </pre>
unothing :: UMaybe a

-- | <a>maybe</a> for <a>UMaybe</a>
umaybe :: b -> (a -> b) -> UMaybe a -> b

-- | Convert to <a>UMaybe</a>
toUMaybe :: Maybe a -> UMaybe a

-- | Convert from <a>UMaybe</a>
fromUMaybe :: UMaybe a -> Maybe a

-- | Run tests
mainUMaybe :: IO ()

-- | All tests
testBatchesUMaybe :: [TestBatch]
newline :: IO ()
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Maybe.Unsafe.UMaybe a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Maybe.Unsafe.UMaybe a)
instance GHC.Show.Show a => GHC.Show.Show (Data.Maybe.Unsafe.UMaybe a)
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (Data.Maybe.Unsafe.UMaybe a)
instance GHC.Base.Semigroup a => GHC.Base.Monoid (Data.Maybe.Unsafe.UMaybe a)
instance Data.Foldable.Foldable Data.Maybe.Unsafe.UMaybe
instance GHC.Base.Functor Data.Maybe.Unsafe.UMaybe
instance Data.Traversable.Traversable Data.Maybe.Unsafe.UMaybe
instance GHC.Base.Applicative Data.Maybe.Unsafe.UMaybe
instance GHC.Base.Alternative Data.Maybe.Unsafe.UMaybe
instance GHC.Base.Monad Data.Maybe.Unsafe.UMaybe
instance GHC.Base.MonadPlus Data.Maybe.Unsafe.UMaybe
instance Test.QuickCheck.Checkers.Model1 Data.Maybe.Unsafe.UMaybe Data.Maybe.Unsafe.UMaybe
instance Test.QuickCheck.Checkers.Model (Data.Maybe.Unsafe.UMaybe a) (Data.Maybe.Unsafe.UMaybe a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Maybe.Unsafe.UMaybe
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Maybe.Unsafe.UMaybe a)
instance Test.QuickCheck.Checkers.EqProp a => Test.QuickCheck.Checkers.EqProp (Data.Maybe.Unsafe.UMaybe a)
instance Test.QuickCheck.Checkers.EqProp GHC.Types.Ordering
